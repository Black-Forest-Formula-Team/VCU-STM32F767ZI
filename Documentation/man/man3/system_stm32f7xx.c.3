.TH "/Users/maurice/git/VCU-STM32F767ZI/src/system_stm32f7xx.c" 3 "Wed Jan 15 2020" "BFFT_VCU_V1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/maurice/git/VCU-STM32F767ZI/src/system_stm32f7xx.c \- CMSIS Cortex-M7 Device Peripheral Access Layer System Source File\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f7xx\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBHSE_VALUE\fP   ((uint32_t)25000000)"
.br
.ti -1c
.RI "#define \fBHSI_VALUE\fP   ((uint32_t)16000000)"
.br
.ti -1c
.RI "#define \fBVECT_TAB_OFFSET\fP   0x00"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBSystemInit\fP (void)"
.br
.RI "Setup the microcontroller system Initialize the Embedded Flash Interface, the PLL and update the SystemFrequency variable\&. "
.ti -1c
.RI "void \fBSystemCoreClockUpdate\fP (void)"
.br
.RI "Update SystemCoreClock variable according to Clock Register Values\&. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint32_t \fBSystemCoreClock\fP = 16000000"
.br
.ti -1c
.RI "const uint8_t \fBAHBPrescTable\fP [16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9}"
.br
.ti -1c
.RI "const uint8_t \fBAPBPrescTable\fP [8] = {0, 0, 0, 0, 1, 2, 3, 4}"
.br
.in -1c
.SH "Detailed Description"
.PP 
CMSIS Cortex-M7 Device Peripheral Access Layer System Source File\&. 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team This file provides two functions and one global variable to be called from user application:
.IP "\(bu" 2
\fBSystemInit()\fP: This function is called at startup just after reset and before branch to main program\&. This call is made inside the 'startup_stm32f7xx\&.s' file\&.
.IP "\(bu" 2
SystemCoreClock variable: Contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters\&.
.IP "\(bu" 2
\fBSystemCoreClockUpdate()\fP: Updates the variable SystemCoreClock and must be called whenever the core clock is changed during program execution\&.
.PP
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
.SS "(C) COPYRIGHT 2016 STMicroelectronics"
.PP
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
.IP "1." 4
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer\&.
.IP "2." 4
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution\&.
.IP "3." 4
Neither the name of STMicroelectronics nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission\&.
.PP
.PP
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED\&. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\&. 
.PP
Definition in file \fBsystem_stm32f7xx\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for BFFT_VCU_V1 from the source code\&.
