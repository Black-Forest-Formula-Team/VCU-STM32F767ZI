.TH "/Users/maurice/git/VCU-STM32F767ZI/src/main.cpp" 3 "Wed Jan 15 2020" "BFFT_VCU_V1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/maurice/git/VCU-STM32F767ZI/src/main.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'main\&.h'\fP
.br
\fC#include 'adc\&.h'\fP
.br
\fC#include 'can\&.h'\fP
.br
\fC#include 'gpio\&.h'\fP
.br
\fC#include <Header_VCU/Sensors\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBSystemClock_Config\fP (void)"
.br
.RI "System Clock Configuration\&. "
.ti -1c
.RI "int \fB_write\fP (int file, char *ptr, int len)"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.RI "The application entry point\&. "
.ti -1c
.RI "void \fBError_Handler\fP (void)"
.br
.RI "This function is executed in case of error occurrence\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBSensors\fP \fBSensors\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int _write (int file, char * ptr, int len)"

.PP
Definition at line 61 of file main\&.cpp\&.
.SS "void Error_Handler (void)"

.PP
This function is executed in case of error occurrence\&. 
.PP
\fBReturn values\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
Definition at line 166 of file main\&.cpp\&.
.PP
Referenced by MX_ADC1_Init(), MX_CAN1_Init(), MX_CAN2_Init(), and SystemClock_Config()\&.
.SS "int main (void)"

.PP
The application entry point\&. 
.PP
\fBReturn values\fP
.RS 4
\fIint\fP 
.RE
.PP

.PP
Definition at line 79 of file main\&.cpp\&.
.PP
References MX_ADC1_Init(), MX_CAN1_Init(), MX_CAN2_Init(), MX_GPIO_Init(), and SystemClock_Config()\&.
.SS "void SystemClock_Config (void)"

.PP
System Clock Configuration\&. 
.PP
\fBReturn values\fP
.RS 4
\fINone\fP 
.RE
.PP
Configure the main internal regulator output voltage
.PP
Initializes the CPU, AHB and APB busses clocks
.PP
Initializes the CPU, AHB and APB busses clocks
.PP
Definition at line 124 of file main\&.cpp\&.
.PP
References Error_Handler()\&.
.PP
Referenced by main()\&.
.SH "Variable Documentation"
.PP 
.SS "\fBSensors\fP \fBSensors\fP"

.PP
Definition at line 50 of file main\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for BFFT_VCU_V1 from the source code\&.
